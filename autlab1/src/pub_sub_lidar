#!/usr/bin/env python3
import rospy
from sensor_msgs.msg import LaserScan
from std_msgs.msg import Float32MultiArray

class SuscriptorLaserScan(object):
    def __init__(self):
        topic = '/scan'
        self.pub = rospy.Subscriber(topic, LaserScan, self.callback_lidar)
        self.rangos = [0.0]*5 

    def callback_lidar(self,msg):
        self.rangos = msg.ranges[:5]
        print(self.rangos)
    

    def get_laserscan(self):
        return self.rangos

if __name__ == "__main__": # Inicio del programa principal

    rospy.init_node('nodo_lidar') # Inicializar el nodo
    sub = SuscriptorLaserScan() # Crear el suscriptor

    # Declarar del publicador
    topic = 'lidar_rangos_red' 
    pub = rospy.Publisher(topic, Float32MultiArray, queue_size=1)
    
    # Creación de una instancia (vacía) del mensaje
    lidar5 = Float32MultiArray()

    # Tiempo de ejecución del bucle (en Hz)
    rate = rospy.Rate(10)
    
    while not rospy.is_shutdown():
        # Leer el valor actual (del suscriptor)
        rangos = sub.get_laserscan()
        lidar5.data = rangos
        # Publicar el mensaje
        pub.publish(lidar5)
        # Esperar
        rate.sleep()
